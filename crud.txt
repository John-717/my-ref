// UserManagement.js

import React, { useState, useEffect } from 'react';
import axios from 'axios';
import BootstrapTable from 'react-bootstrap-table-next';
import paginationFactory from 'react-bootstrap-table2-paginator';
import cellEditFactory from 'react-bootstrap-table2-editor';

const UserManagement = () => {
  const [users, setUsers] = useState([]);

  useEffect(() => {
    // Fetch users when the component mounts
    fetchUsers();
  }, []);

  const fetchUsers = async () => {
    try {
      const response = await axios.get('https://your-api-url/users');
      setUsers(response.data);
    } catch (error) {
      console.error('Error fetching users:', error);
    }
  };

  const deleteUser = async (userId) => {
    try {
      // Make a DELETE request to remove the user
      await axios.delete(`https://your-api-url/users/${userId}`);
      // Refresh the user list
      fetchUsers();
    } catch (error) {
      console.error('Error deleting user:', error);
    }
  };

  const columns = [
    {
      dataField: 'id',
      text: 'ID',
      sort: true,
    },
    {
      dataField: 'name',
      text: 'Name',
      sort: true,
      editorRenderer: (editorProps, value, row, column, rowIndex, columnIndex) => (
        <input
          type="text"
          {...editorProps}
          value={value}
          onChange={(e) => {
            const updatedUser = { ...row, name: e.target.value };
            handleUserUpdate(row.id, updatedUser);
          }}
        />
      ),
    },
    {
      dataField: 'email',
      text: 'Email',
      sort: true,
      editorRenderer: (editorProps, value, row, column, rowIndex, columnIndex) => (
        <input
          type="text"
          {...editorProps}
          value={value}
          onChange={(e) => {
            const updatedUser = { ...row, email: e.target.value };
            handleUserUpdate(row.id, updatedUser);
          }}
        />
      ),
    },
    {
      dataField: 'actions',
      text: 'Actions',
      formatter: (cellContent, row) => (
        <button onClick={() => deleteUser(row.id)}>Delete</button>
      ),
    },
  ];

  const handleUserUpdate = async (userId, updatedUser) => {
    try {
      // Make a PUT request to update the user
      await axios.put(`https://your-api-url/users/${userId}`, updatedUser);
      // Refresh the user list
      fetchUsers();
    } catch (error) {
      console.error('Error updating user:', error);
    }
  };

  return (
    <div>
      <h1>User Management</h1>
      <BootstrapTable
        keyField="id"
        data={users}
        columns={columns}
        pagination={paginationFactory()}
        cellEdit={cellEditFactory({ mode: 'click', blurToSave: true })}
      />
    </div>
  );
};

export default UserManagement;
